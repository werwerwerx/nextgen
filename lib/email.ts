import { createAdminClient } from './supabase/admin';

export async function sendEmailNotification(email: string, subject: string, htmlContent: string) {
  try {
    const supabase = createAdminClient();
    
    const { data, error } = await supabase.functions.invoke('send-email', {
      body: {
        to: email,
        subject: subject,
        html: htmlContent,
        from: 'onboarding@resend.dev'
      }
    });

    if (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ Supabase:', error);
      return false;
    }

    if (data?.error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç Edge Function:', data.error);
      return false;
    }

    console.log(`Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ${email} (ID: ${data?.id})`);
    console.log(`–¢–µ–º–∞: ${subject}`);
    
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
    return false;
  }
}

export async function sendNewLeadEmailNotification(email: string, leadData: {name: string; email: string | null; phone: string | null}, courseName?: string) {
  const subject = '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫—É—Ä—Å';
  const htmlContent = `
    <h2>üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</h2>
    <p><strong>–ò–º—è:</strong> ${leadData.name}</p>
    <p><strong>Email:</strong> ${leadData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
    <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${leadData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
    <p><strong>–ö—É—Ä—Å:</strong> ${courseName || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è'}</p>
    <p><strong>–í—Ä–µ–º—è:</strong> ${new Date().toLocaleString('ru-RU')}</p>
  `;

  return await sendEmailNotification(email, subject, htmlContent);
} 